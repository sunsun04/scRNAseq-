cds.SVFLNSC <- as.cell_data_set(SVFLNSC_final)
DefaultAssay(SVFLNSC_final) <- "RNA" # 이거 없으면 deg 찾는 단계에서 에러남 
head(colData(cds.SVFLNSC))
fData(cds.SVFLNSC)

recreate.partitions <- c(rep(1,length(cds.SVFLNSC@colData@rownames)))
names(recreate.partitions) <- cds.SVFLNSC@colData@rownames
recreate.partitions <- as.factor(recreate.partitions)
recreate.partitions

cds.SVFLNSC@clusters@listData[["UMAP"]][["partitions"]] <- recreate.partitions
list.cluster <- SVFLNSC_final@active.ident
cds.SVFLNSC@clusters@listData[["UMAP"]][["clusters"]] <- list.cluster
cds.SVFLNSC@int_colData@listData[["reducedDims"]]@listData[["UMAP"]] <- SVFLNSC_final@reductions$umap@cell.embeddings

cluster.before.traj <-plot_cells(cds.SVFLNSC, color_cells_by = "cluster", label_groups_by_cluster = F, 
                                 group_label_size = 5) + theme(legend.position = "right")
cluster.before.traj

cds.SVFLNSC <- learn_graph(cds.SVFLNSC, use_partition = T)
cds.SVFLNSC <- cluster_cells(cds.SVFLNSC, resolution=2e-4)
p1 <- plot_cells(cds.SVFLNSC, color_cells_by = "cluster", show_trajectory_graph = FALSE,
           group_label_size = 5)
p2 <- plot_cells(cds.SVFLNSC, color_cells_by = "partition", show_trajectory_graph = FALSE,
                 group_label_size = 5)
wrap_plots(p1,p2)

plot_cells(cds.SVFLNSC,
           color_cells_by = "cluster",
           label_groups_by_cluster=FALSE,
           label_leaves=FALSE,
           label_branch_points=FALSE)


#integrated.sub <- subset(as.Seurat(cds.SVFLNSC, assay = NULL), monocle3_partitions == 2,3,4)
#cds_subset <- as.cell_data_set(integrated.sub)

cdsLNSC <- order_cells(cdsLNSC, reduction_method = "UMAP")
plot_cells(cdsLNSC, color_cells_by = "pseudotime", label_groups_by_cluster = T,LabelClusters()
           label_branch_points = T, label_roots = F, label_leaves = F,trajectory_graph_color = "black")
head(pseudotime(cdsLNSC), 10)
cdsLNSC$monocle3_pseudotime <- pseudotime(cdsLNSC)
data.pseudo_LNSC <- as.data.frame(colData(cdsLNSC))

ggplot(data.pseudo_LNSC, aes(monocle3_pseudotime, seurat_clusters, fill = celltype )) + geom_boxplot() #fill=seruat_cluster로 하면 numbering되서 나오고 celltype으로 해야 명명된 cluster 이름으로 나온다.
ggplot(data.pseudo_LNSC, aes(monocle3_pseudotime, reorder(seurat_clusters, monocle3_pseudotime), fill = celltype)) + geom_boxplot() 
deg <- graph_test(cds.SVFLNSC,neighbor_graph = "principal_graph") # graphtest : 유전자의 차별적 발현을 테스트 하는 기능 
deg_new %>% arrange(q_value) %>% filter(status == "OK") %>% head(40)

deg_n <- graph_test(cds.SVFLNSC,neighbor_graph = "principal_graph",cores = 2)
deg_test %>% arrange(q_value) %>% filter(status == "OK") %>% head()
plot_cells(cds.SVFLNSC_new, genes=c("Apoe", "Cxcl12","Cxcl1","Cr2","Esam","Ly6c1"),
           show_trajectory_graph=FALSE,
           label_cell_groups=FALSE,
           label_leaves=FALSE)

 


fData(cds.SVFLNSC)$gene_short_name <- rownames(fData(cds.SVFLNSC))
head(fData(cds.SVFLNSC))
head(counts(cds.SVFLNSC))

FeaturePlot(SVFLNSC_final, features = c("Pdpn", "Cxcl13", "Cr2", "Cd21","Cd35","Pecam1"))
SVFLNSC_final$pseudotime <- pseudotime(cds.SVFLNSC)
FeaturePlot(SVFLNSC_final, features = "pseudotime")


pseudotime(cds.SVFLNSC)
cds.SVFLNSC$monocle3_pseudotime <- pseudotime(cds.SVFLNSC)
ggplot(data.pseudo,aes(monocle3_pseudotime,reorder(celltype,monocle3_pseudotime,median),fill = celltype)) +geom_boxplot()

# using gene module, fine gene change as a function of pseudotime

deg <- graph_test(cds.SVFLNSC,neighbor_graph = "principal_graph",cores = 1)
rowData(cds.SVFLNSC)$gene_short_name <- row.names(rowData(cds.SVFLNSC))
head(deg,error = FALSE,message = FALSE,warning=FALSE)
deg <- rownames(subset(deg[order(deg$morans_I, decreasing = TRUE),], q_value < 0.05))
plot_cells(cds.SVFLNSC,genes=head(deg,10),show_trajectory_graph = FALSE,label_cell_groups = FALSE, label_leaves = FALSE)
deg <- table(deg)

gene_modules <- find_gene_modules(cds.SVFLNSC[deg_ids_test,])
table(gene_modules$module)



plot_cells(cdsLNSC,
           color_cells_by = "pseudotime",
           group_cells_by = "cluster",
           label_cell_groups = FALSE,
           label_groups_by_cluster=FALSE,
           label_leaves=FALSE,
           label_branch_points=FALSE,
           label_roots = FALSE,
           trajectory_graph_color = "black")

plot_cells(cds.SVFLNSC_new, genes=c("Apoe", "Cxcl12","Cxcl1","Cr2","Esam","Ly6c1"),
           show_trajectory_graph=FALSE,
           label_cell_groups=FALSE,
           label_leaves=FALSE)


